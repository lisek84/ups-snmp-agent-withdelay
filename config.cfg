## Machine shutdown script for SNMP Trap
## Author: lisek84
##
##
## SNMP Configuration:
## IPaddress: Set IP address of your snmp server that I should read from.
IPaddress=1.2.3.4
## Provide a proper community to connect to snmp server
community=public
## Select SNMP protocol version: ( 1|2c|3 )
snmpversion=2c
## Select snmpwalk localization in your system
snmpwalk=/usr/bin/snmpwalk
## To avoid flooding snmp server with my questions. Set some short delay between polling data from snmp server
polldelay=3
## Please provide a proper snmp OID that I should look at. When it will be changed, I will shutdown machines
## Make sure that by doing snmpwalk you get either "iso" or "1" at the beginning of the OID
## Modern snmpwalk will handle both inputs correctly, so possibly it does not really matters, but keep it in mind if something is
## not really OK.
shutdownoid=iso.3.6.1.2.1.33.1.4.1
## Please tell me what values readed from above OID should I take for Normal UPS work, and What will be for battery work. 
## (If OID is alarm, and does not exist until alarm raised - use 0 for normaltrap)
batterytrap=5
normaltrap=3
## Should I stop this script if connection to snmp server is impossible? (0/1)
connection_fatal=0
## Please tell me how long should I wait until I begin shutdown procedure. Calculate this value to be proper for YOUR OWN UPS
## system. There is no defaults!!!! If time provided here will be too long - You may have not enough Juice left in batteries to 
## Properly shutdown your systems. DO IT WITH CARE!!!
##
## Value in SECONDS
waittime=120

## ----------------------------------------------------
## This section is a configuration for shutdown action.
## Here We USE IPMI to send shutdown signal to Machine. But You can use your own scripts, or Ideas.
## Feel free to use something different or completely rebuild this script for your own use.
##
##
## Here I shutdown one Machine, and after this. I'm waiting until it's down. Then I'm shutting down storage boxes attached to it.
## This May not work for your configuration. Feel free to do it just as you like
##
## Should I wait until first machine down, and kill something else after this. Or just send shutdown to all at once and that's all
## IT WILL IMMEDIATELY SHUTDOWN ALL OF YOUR MACHINES. It is usefull for normal machines, Not some storage boxes that needs time to
## stop main host before slaves.
waituntildown=1

## 
## If above setting is set to 1, What should I do if main server is still responding after time?
## 0 is none. 1 is to poweroff slave machines also, even that master is still running
killeitherway=0

## How long should I wait for main server to get powered off until I stop slave machines.
## This is valid only if killeitherway is set to 0
wait_until_main_down_for=30

## How long delay should I take between checking life (pinging) of main server (seconds)
loopwaitdelay=10

## Set IP addresses of boxes to shutdown. If waituntildown is set to 0 You can have only one group. Or place machines in 
## different groups. It doesnt matter. 
## If it's 1 - U need to set machines that 
## will be turned off after main server is down, set them in the same line after space separation, after main machine
## Also You need to set login and password for tool that will shutdown Machines. Here we USE IPMI to access machines and send 
## them ACPI command to shut down they OS'es. 
## You can have as many groups as you want, just add next number to the end of the variable name. 
## Proper config should look like this:
## 
## shutdowngroupN="IP_of_Main_Machine IP_of_Slave_Machine1 IP_of_Slave_Machine2 IP_of_Slave_Machin3 IP_of_Slave_MachineN"

shutdowngroup1="1.2.3.4 2.3.4.5"
shutdowngroup2="6.7.8.9 10.11.12.13"
shutdowngroup3="14.15.16.17 18.19.20.21 22.23.24.25"
#shutdowngroup4="1.2.3.4 2.3.4.5"
#shutdowngroup5="1.2.3.4 2.3.4.5"
#shutdowngroup6="1.2.3.4 2.3.4.5"

## So. About the credentials. Please set them in the credentials.cfg file
## IPADDRESS LOGIN PASSWORD
## IPADDRESS2 LOGIN PASSWORD
## Script will look for passwords there

## Choose IPMITool Location
ipmitool=/usr/sbin/ipmitool

## Choose ipmi tool command to send to machines
## by default I recommend "chassis power soft" but you can use something to test like blinkin lights, etc
ipmicommand="chassis power soft"

## Location of log file. I will write there everything That I was doing. It can be important if my settings will be wrong and some disaster accure. Reading this will help you to tune settings of this script.
## There will be also other files created in the same directory - with numbers attached to shutdowngroups (see above)
logfile=/var/log/ups_powerdown.log

## Sound the alarm: Please provide here a line, that I will execute to notice you if something happened. 
## It could be e-mail sending, sms sending through some API, just use you own way to notice you.
## Example:
## alarmline="echo SOUNDING THE ALARM; ./some_script MobileNumber, e-mail etc"
alarmline="echo DUMMY ALARM. WHY YOU DIDNT SET ME?"

## End of Configuration. If anything more is required - edit bash scripts.
## Have a nice day
